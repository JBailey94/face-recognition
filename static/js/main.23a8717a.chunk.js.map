{"version":3,"sources":["components/navigation/Navigation.js","components/image-link-form/ImageLinkForm.js","components/rank/Rank.js","components/face-recognition/FaceRecognition.js","components/register/Register.js","components/SignIn/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","ImageLinkForm","onInputChange","onButtonSubmit","onChange","type","Rank","FaceRecognition","imageUrl","box","id","src","alt","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Register","for","name","value","SignIn","particleOptions","particles","number","density","enable","size","random","anim","speed","size_min","line_linked","shadow","color","blue","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","app","Clarifai","App","apiKey","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","console","log","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","error","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.23a8717a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n        return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa2 pointer white'>Sign Out</p>\r\n            </nav>\r\n        );\r\n    } else {\r\n        return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa2 pointer white'>Sign In</p>\r\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa2 pointer white'>Register</p>\r\n            </nav>\r\n        );\r\n    }      \r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\n// whenever you pass a prop, the component that is passing thee prop must have the same name\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <p>\r\n                {'This will detect faces in your pictures. Try it out!'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br4 shadow-5'>\r\n                    <input  onChange={onInputChange} className='br2 f4 pa2 w-70 center' type='text' />\r\n                    <button onClick={onButtonSubmit} className='ma2 w-25 grow f3 link ph3 pv2 dib br2 bg-light-blue'>Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>   \r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n    return (\r\n        <div>\r\n            <div className='white f3'>\r\n                {'Jesse, your current rank is...'}\r\n            </div>\r\n            <div className='white f1'>\r\n                {'#5'}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n    return (\r\n      <div className='center ma4'>\r\n          <div className='absolute mt2'>\r\n            <img id='inputimage' src={imageUrl} alt={''} width='600px' height='auto'/>\r\n            <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n    return (\r\n        <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n                <form className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f2 fw6 ph0 mh0 white\">Register</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6 white\" for=\"email-address\">Name</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-gray hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n                    </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6 white\" for=\"email-address\">Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-gray hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6 white\" for=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-gray hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                    </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input className=\"b ph3 pv2 input-reset ba b--transparent bg-transparent grow pointer f6 dib white\"\r\n                            type=\"submit\" \r\n                            value=\"Submit\"\r\n                            onClick={() => onRouteChange('home')} // looks for a callback, arrow function gives it\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        </article>    \r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n\r\nconst SignIn = ({ onRouteChange }) => {\r\n    return (\r\n        <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n                <form className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f2 fw6 ph0 mh0 white\">Sign In</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6 white\" for=\"email-address\">Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-gray hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6 white\" for=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-gray hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                    </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                    <input className=\"b ph3 pv2 input-reset ba b--transparent bg-transparent grow pointer f6 dib white\"\r\n                        type=\"submit\" \r\n                        value=\"Sign in\"\r\n                        onClick={() => onRouteChange('home')} // looks for a callback, arrow function gives it\r\n                    />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                    <p onClick={() => onRouteChange('register')}className=\"f6 link dim black db white pointer\">Register</p>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        </article>    \r\n    )\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport Navigation from './components/navigation/Navigation';\r\nimport ImageLinkForm from './components/image-link-form/ImageLinkForm';\r\nimport Rank from './components/rank/Rank';\r\nimport FaceRecognition from './components/face-recognition/FaceRecognition';\r\nimport Register from './components/register/Register';\r\nimport SignIn from './components/SignIn/SignIn';\r\nimport Particles from 'react-particles-js';\r\nimport Clarifai from 'clarifai';\r\nimport './App.css';\r\n\r\nconst particleOptions = { \r\n  particles: {\r\n    number: {\r\n      value: 160,\r\n      density: {\r\n          enable: false\r\n      }\r\n  },\r\n    size: {\r\n      value: 3,\r\n      random: true,\r\n      anim: {\r\n          speed: 4,\r\n          size_min: 0.3\r\n      }\r\n  },\r\n    line_linked: {\r\n      shadow: {\r\n        enable: true,\r\n        color: \"#3CA9D1\",\r\n        blue: 5\r\n      }\r\n    }\r\n  },\r\n  interactivity: {\r\n    events: {\r\n        onhover: {\r\n            enable: true,\r\n            mode: \"repulse\"\r\n        },\r\n        onclick: {\r\n            enable: true,\r\n            mode: \"repulse\"\r\n        }\r\n    },\r\n    modes: {\r\n        bubble: {\r\n            distance: 100,\r\n            duration: 2,\r\n            size: 0,\r\n            opacity: 0\r\n        },\r\n        repulse: {\r\n            distance: 100,\r\n            duration: 2\r\n        }\r\n    }\r\n  }\r\n}\r\n    \r\n// Clarifai initialize\r\nconst app = new Clarifai.App({\r\n  apiKey: '98d70806f17a461a8e9f977797f853ae'\r\n });\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: '',\r\n      imageUrl: '',\r\n      box: {},\r\n      route: 'signin', //keeps track of where we are on the page\r\n      isSignedIn: false\r\n    }\r\n  }\r\n\r\n  calculateFaceLocation = (data) => {\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('inputimage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    console.log(width, height);\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n      bottomRow: height - (clarifaiFace.bottom_row * height)\r\n    }\r\n  }\r\n\r\n  displayFaceBox = (box) => {\r\n    console.log(box);\r\n    this.setState({box: box});\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    console.log(event);\r\n    this.setState({input: event.target.value})\r\n  }\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState({imageUrl: this.state.input});\r\n    app.models.predict(\r\n      Clarifai.FACE_DETECT_MODEL,\r\n      this.state.input)\r\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\r\n    .catch(error => console.log(error));\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if (route === 'signout') {\r\n      this.setState({isSignedIn: false})\r\n    } else if (route === 'home') {\r\n      this.setState({isSignedIn: true})\r\n    }\r\n    this.setState({route: route});\r\n  }\r\n\r\n  render() {\r\n    const { isSignedIn, imageUrl, route, box } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\r\n        <Particles className='particles' params={ particleOptions } />\r\n        { route === 'home' ?\r\n          <div>\r\n            <Rank />\r\n            <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>   \r\n            <FaceRecognition box={box} imageUrl={imageUrl} />\r\n          </div>  \r\n          : (\r\n            route === 'signin' \r\n            ? <SignIn onRouteChange={this.onRouteChange} />\r\n            : <Register onRouteChange={this.onRouteChange} />\r\n          )         \r\n        }    \r\n      </div>\r\n    )\r\n  }  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}